//cache hit
			if(cacheMeta[index][0] == tag && cacheMeta[index][1] == 1){
				verboseStream << "1 1\n";
				//read hit
				if (accessType[i].compare("R") == 0){
					reads++;
					readTime++; // cache to CPU
				}
				//write hit
				else{
					writes++;
					writeTime++; // CPU to cache
					cacheMeta[index][2] = 1;
					cacheBlock[index][offset<<2] = data[i];
				}
			}
			//cache miss
			else{
				verboseStream << "0 2";
				dataMiss++;
				cacheMeta[index][0] = tag;
				cacheMeta[index][1] = 1;
				cacheBlock[index][offset<<2] = data[i];

				//clean miss
				if(cacheMeta[index][2] == 0){
					verboseStream << "a\n";
					//clean read miss
					if(accessType[i].compare("R") == 0){
						reads++;
						readMiss++;
						readTime+= 81; 
						bytesRead+= blockSize;
						cacheMeta[index][2] = 0;
					}
					//clean write miss
					else{
						writes++;
						writeMiss++;
						writeTime+= 81; 	
						bytesRead+= blockSize;
						cacheMeta[index][2] = 1;
					}
				}
				//dirty miss
				else{
					verboseStream << "b\n";
					//dirty read miss
					if(accessType[i].compare("R") == 0){
						reads++;
						readMiss++;
						dirtyRead++;
						readTime+=161;
						bytesWrite+= blockSize;
						bytesRead+=blockSize;
						cacheMeta[index][2] = 0;
					}
					//dirty write miss
					else{
						writes++;
						writeMiss++;
						dirtyWrite++;
						writeTime+=161; 
						bytesWrite+= blockSize;
						bytesRead+=blockSize;
						cacheMeta[index][2] = 1;
					}
				}
			}